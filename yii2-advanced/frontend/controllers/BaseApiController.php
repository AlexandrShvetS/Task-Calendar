<?php

namespace frontend\controllers;
use Yii;
use yii\data\ActiveDataProvider;
use yii\rest\ActiveController;
use common\models\Config;
use yii\filters\auth\HttpBearerAuth;

class Bearer extends HttpBearerAuth
{
    public function handleFailure($response)
    {
        Yii::$app->response->setStatusCode( 403);
        return Yii::$app->response->data = [
            'message' => 'You need authorization'
        ];
    }
}

class BaseApiController extends ActiveController
{

    //Обертка для items и мета данные (кол-во страниц и т.п.)
    public $serializer = [
        'class' => 'yii\rest\Serializer',
        'collectionEnvelope' => 'items',

    ];


    public function checkAccess($action, $model=null, $params=[]) {
        return true;
    }

    /**
     * @return array
     */

    public function behaviors() {

        $config = Config::findOne(['name' => 'active_token']);
        $token_active = (int)$config->value;

        if($token_active == 1)
        {
            //Для вывода данных в разных форматов и Для проверки токена
            return [
                'authenticator' => [
                    'class' => Bearer::className(),
                    'except' => ['login', 'signup'],
                ],

                'contentNegotiator' => [
                    'class' => \yii\filters\ContentNegotiator::class,
                    'formatParam' => '_format',
                    'formats' => [
                        'application/json' => \yii\web\Response::FORMAT_JSON,
                        'xml' => \yii\web\Response::FORMAT_XML
                    ],
                ],
            ];
        }
        else
        {
            //Для вывода данных в разных форматов и Для проверки токена
            return [
                'contentNegotiator' => [
                    'class' => \yii\filters\ContentNegotiator::class,
                    'formatParam' => '_format',
                    'formats' => [
                        'application/json' => \yii\web\Response::FORMAT_JSON,
                        'xml' => \yii\web\Response::FORMAT_XML
                    ],
                ],
            ];
        }
        //Для проверки токена
        /*$behaviors = parent::behaviors();
        $behaviors['authenticator'] = [
            'class' => Bearer::className(),
            'except' => ['login', 'signup'],
        ];
        return $behaviors;*/


    }
    public function beforeAction($action)
    {
        Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }


}